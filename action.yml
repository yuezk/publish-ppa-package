name: 'publish-ppa-package'
description: 'Publish a PPA package'
branding:
  color: orange
  icon: package
inputs:
  repository:
    description: 'The PPA repository, e.g., "yuezk/globalprotect-openconnect"'
    required: true
  gpg_private_key:
    description: 'GPG private key exported as an ASCII armored version or its base64 encoding'
    required: true
  gpg_passphrase:
    description: 'Passphrase of the GPG private key'
    required: false
  tarball:
    description: 'The tarball of the package to be published'
    required: true
  debian_dir:
    description: 'The debian directory, will be merged with the tarball'
    required: false
  series:
    description: 'The series to which the package will be published, separated by space. e.g., "bionic focal"'
    required: false
  extra_series:
    description: 'The extra series to which the package will be published, separated by space. e.g., "bionic focal"'
    required: false
  revision:
    description: 'The revision of the package'
    required: false
    default: '1'
  deb_email:
    description: 'The email address of the maintainer'
    required: true
  deb_fullname:
    description: 'The full name of the maintainer'
    required: true
  extra_ppa:
    description: 'The extra PPA this package depends on, separated by space. e.g., "liushuyu-011/rust-bpo-1.75"'
    required: false
  debmake_arguments:
    description: The arguments for debmake
    required: false

runs:
  using: composite
  steps:
    - run: ${{github.action_path}}/build.sh
      shell: bash
      env:
        REPOSITORY: ${{inputs.repository}}
        GPG_PRIVATE_KEY: ${{inputs.gpg_private_key}}
        GPG_PASSPHRASE: ${{inputs.gpg_passphrase}}
        TARBALL: ${{inputs.tarball}}
        DEBIAN_DIR: ${{inputs.debian_dir}}
        SERIES: ${{inputs.series}}
        EXTRA_SERIES: ${{inputs.extra_series}}
        REVISION: ${{inputs.revision}}
        DEBEMAIL: ${{inputs.deb_email}}
        DEBFULLNAME: ${{inputs.deb_fullname}}
        EXTRA_PPA: ${{inputs.extra_ppa}}
        DEBMAKE_ARGUMENTS: ${{inputs.debmake_arguments}}
